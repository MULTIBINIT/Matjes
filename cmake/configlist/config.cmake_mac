message("reading config.cmake")

set(MPI_Fortran_COMPILER "mpifort")
set(custom_MPICCOMP_FORTRAN "gfortran")
set(CMAKE_CXX_COMPILER "gcc-11")

#manual adds to fortran compiler
set(compadd "")                                                 #add to release and debug
set(com_rel_add "")  #add to release
set(com_deb_add "")                                             #add to debug 


if(DEFINED ENV{MKLROOT})
  set(MKLROOT $ENV{MKLROOT})
  set(add_lib ${add_lib} "-L/usr/lib/ -lblas -llapack" "-L${MKLROOT}/lib/ -lmkl_core -lmkl_sequential -lmkl_intel_lp64")
  set(add_inc ${add_inc} "${MKLROOT}/include"  "/usr/local/include/")
  set(add_lib ${add_lib} "-L/usr/local/lib -lnetcdff")
  set(add_inc ${add_inc} "${MKLROOT}/include"  "/usr/local/include/")
  set(MKL_linker " -lmkl_core -lpthread -lm -ldl")
  include_directories( $ENV{MKLROOT}/include )
  link_directories( $ENV{MKLROOT}/lib )
  set(CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} "-lstdc++ -lc++") 
else()
  message( FATAL_ERROR "Did not find ${MKLROOT} environment variable" )
endif()

add_compile_definitions(CPP_BRUTDIP CPP_INTERNAL CPP_MKL)
#add_compile_definitions(CPP_MATMUL_MKL_COO)
#add_compile_definitions(CPP_MATMUL_MKL_CSR)
#add_compile_definitions(CPP_MKL_SPBLAS)
add_compile_definitions(CPP_DENSE)
#add_compile_definitions(CPP_MPI)
#add_compile_definitions(CPP_MATMUL_MKL_SPARSE CPPMKL_CSR)
#add_compile_definitions(CPP_MATMUL_EIGEN_SPARSE)     #multiplication using sparse energy matrix
